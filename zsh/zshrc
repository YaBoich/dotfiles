
# Since this is symlinked we need to do a bit of work to get the real path.
# 'grealpath' comes from the gnu coreutils.
SCRIPT_DIR="$(dirname "$(grealpath $HOME/.zshrc)")"

source $SCRIPT_DIR/../config.env

#####################################################################################
#                               ZSH Basic Config                                    #
#####################################################################################

export PATH=$HOME/bin:/usr/local/bin:$PATH
export ZSH="$HOME/.oh-my-zsh"

# Themes: https://github.com/ohmyzsh/ohmyzsh/wiki/Themes
ZSH_THEME="random"
ZSH_THEME_RANDOM_CANDIDATES=( "robbyrussell" )

ENABLE_CORRECTION="true"       # Enable command auto-correction
COMPLETION_WAITING_DOTS="true" # Waiting dots during completion
                               # WARN: Can cause issues with multi-line prompts
DISABLE_UPDATE_PROMPT="true"   # Automatically update without prompting.

# Troubleshooting (Uncomment as required):
# DISABLE_MAGIC_FUNCTIONS="true"  # Helps if pasting URLs/text is misbehaving
# DISABLE_UNTRACKED_FILES_DIRTY="true"  # Speeds up status check for large repos
# HIST_STAMPS="mm/dd/yyyy"  # Changes the history command timestamp format

# Plugins -> Standard: $ZSH/plugins/ || Custom: $ZSH_CUSTOM/plugins/
plugins=(git)

source $ZSH/oh-my-zsh.sh

#####################################################################################
#                                MY CONFIG                                          #
#####################################################################################

#---------------------------- VIM Bindings & Modes ----------------------------------
bindkey -v  # Enable vi keybindings in terminal

# Cursor mode indications
function zle-line-init zle-keymap-select {
    case $KEYMAP in 
    	vicmd) print -n "\e[1 q";;       # Block cursor for NORMAL mode
    	main|viins) print -n "\e[5 q";;  # Line cursor for INSERT mode
    esac
    zle reset-prompt
}
zle -N zle-line-init
zle -N zle-keymap-select

# Mode prompt indicator
function vi_mode_prompt_info() {
    echo "${${KEYMAP/vicmd/[N]}/(main|viins)/   } "
}
PROMPT='$(vi_mode_prompt_info)'$PROMPT

#--------------------------------- Neovim -------------------------------------------
# nvim by default, alias should protect us if nvim doesn't exist
# Otherwise - good luck using nano, lol.
export PATH="$HOME/neovim/bin:$PATH"
if command -v nvim > /dev/null 2>&1; then
    alias vim='nvim' 
fi

#---------------------------- General / Misc ----------------------------------------
# Setup history
HISTFILE=~/.histfile
HISTSIZE=1000
SAVEHIST=1000
setopt hist_ignore_dups        # Prevent duplicate history entries
setopt share_history           # Share command history across all sessions

setopt no_beep                 # Disable tab beeping
export EDITOR='vim'            # Set the default editor

# Extended file globbing (helps with advanced pattern matching)
setopt EXTENDED_GLOB     


#---------------------------- Aliases -----------------------------------------------
alias github="open https://github.com/"
alias gs="git status"
alias editZsh="vim ~/.zshrc"
alias sourceZsh="source ~/.zshrc"

search () {
    # Opens a search on google for the 
    # given arguments. Can be left blank.
    # Arguments:
    #   All arguments are treated as the 
    #	search query.
	input_str="$*"
	query=${input_str//" "/"+"}
	search_url="https://www.google.com/search"
	final_url="${search_url}?q=${query}"
	open ${final_url}
}

[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

#-------------------------- Package & Language Config -------------------------------

# Pyenv, Python, Virtualenv
# ==> Caveats: might need to be: eval "$(pyenv init --path)"
command -v pyenv >/dev/null || export PATH="$PYENV_ROOT/bin:$PATH"
if command -v pyenv 1>/dev/null 2>&1; then
  eval "$(pyenv init -)"
  eval "$(pyenv virtualenv-init -)"
fi

# Java & Maven
# ==> Brew Caveats:
# For the system Java wrappers to find this JDK, symlink it with
#   sudo ln -sfn /opt/homebrew/opt/openjdk@17/libexec/openjdk.jdk /Library/Java/JavaVirtualMachines/openjdk-17.jdk
# For compilers to find openjdk@17 you may need to set:
#   export CPPFLAGS="-I/opt/homebrew/opt/openjdk@17/include"
export JAVA_HOME="/opt/homebrew/opt/openjdk@$JAVA_VERSION/"
export PATH="$JAVA_HOME/bin:$PATH"

# NVM (https://tecadmin.net/install-nvm-macos-with-homebrew/)
export NVM_DIR="$HOME/.nvm"
[ -s "/opt/homebrew/opt/nvm/nvm.sh" ] && \. "/opt/homebrew/opt/nvm/nvm.sh"  # This loads nvm
[ -s "/opt/homebrew/opt/nvm/etc/bash_completion.d/nvm" ] && \. "/opt/homebrew/opt/nvm/etc/bash_completion.d/nvm"  # This loads nvm bash_completion

